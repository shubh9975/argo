name: Build image on release

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: shubh9975/images

      - name: Build and push the Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: changing the deployment of git repo
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          git config user.email shubham.tamboli1@gmail.com
          git config user.name Shubham
          pwd
          cat prod-env/release-deployment.yaml
          pwd
          echo "commitID: ${{ github.sha }}"
          awk '{gsub("shubh9975/images:.*", "shubh9975/images:${{ github.sha }}")}1' deployment.yaml > tmpfile && mv tmpfile deployment.yaml
          cat prod-env/release-deployment.yaml
          git add .
          git commit -m 'Done by Github Actions. Job change manifest: ${{ github.sha }}'
          git push origin main

      - name: Extract tag value
        id: extract_tag
        run: echo "::set-output name=tag_value::${GITHUB_REF#refs/tags/}"

      - name: Print tag value
        run: echo "Tag value:" ${{ steps.extract_tag.outputs.tag_value }}
